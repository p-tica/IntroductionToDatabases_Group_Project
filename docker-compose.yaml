version: '3.8'

services:
  mariadb:
    image: mariadb:10.11
    container_name: recording-studio-db
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-rootpassword}
      - MYSQL_DATABASE=${DB_NAME:-recording_studio}
      - MYSQL_USER=${DB_USER:-appuser}
      - MYSQL_PASSWORD=${DB_PASSWORD:-apppassword}
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      # Mount initialization scripts if you have any
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_ROOT_PASSWORD:-rootpassword}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  backend:
    build:
      context: ./website_group3/backend
      dockerfile: Dockerfile
    container_name: recording-studio-backend
    ports:
      - "60000:60000"
    environment:
      # Database configuration - now pointing to MariaDB container
      - DB_HOST=mariadb
      - DB_PORT=3306
      - DB_USER=${DB_USER:-appuser}
      - DB_PASSWORD=${DB_PASSWORD:-apppassword}
      - DB_NAME=${DB_NAME:-recording_studio}
      - NODE_ENV=production
    networks:
      - app-network
    depends_on:
      mariadb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:60000/artists"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./website_group3/frontend
      dockerfile: Dockerfile
    container_name: recording-studio-frontend
    ports:
      - "60001:60001"
    environment:
      - NODE_ENV=production
      # Backend API URL - using service name for internal communication
      - VITE_API_URL=http://backend:60000
    networks:
      - app-network
    depends_on:
      mariadb:
        condition: service_healthy
      backend:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:60001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  app-network:
    driver: bridge

# Volumes for persistent data
volumes:
  mariadb_data:
    driver: local
